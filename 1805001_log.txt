Line 1: type_specifier : INT

int

Line 1: declaration_list : ID

x

Line 1: declaration_list : declaration_list COMMA ID

x,y

Line 1: declaration_list : declaration_list COMMA ID

x,y,z

Line 1: var_declaration : type_specifier declaration_list SEMICOLON

int x,y,z;

Line 1: unit : var_declaration

int x,y,z;

Line 1: program : unit

int x,y,z;

Line 1: type_specifier : FLOAT

float

Line 1: declaration_list : ID

a

Line 1: declaration_list : declaration_list COMMA ID LTHIRD CONST_INT RTHIRD

a,b[100]

Line 1: var_declaration : type_specifier declaration_list SEMICOLON

float a,b[100];

Line 1: unit : var_declaration

float a,b[100];

Line 1: program : program unit

int x,y,z;
float a,b[100];

Line 3: type_specifier : INT

int

Line 4: type_specifier : INT

int

Line 4: declaration_list : ID

x

Line 4: declaration_list : declaration_list COMMA ID

x,y

Line 4: declaration_list : declaration_list COMMA ID

x,y,z

Line 4: var_declaration : type_specifier declaration_list SEMICOLON

int x,y,z;

Line 4: statement : var_declaration

int x,y,z;

Line 4: statements : statement

int x,y,z;

Line 6: variable : ID

x

Line 6: variable : ID

y

Line 6: factor : variable INCOP

y++

Line 6: unary_expression : factor

y++

Line 6: term : unary_expression

y++

Line 6: simple_expression : term

y++

Line 6: rel_expression : simple_expression

y++

Line 6: logic_expression : rel_expression

y++

Line 6: expression : variable ASSIGNOP logic_expression

x=y++

Line 6: expression_statement : expression SEMICOLON

x=y++;

Line 6: statement : expression_statement

x=y++;

Line 6: statements : statements statement

int x,y,z;
x=y++;

Line 7: factor : CONST_INT

0

Line 7: unary_expression : factor

0

Line 7: term : unary_expression

0

Line 7: simple_expression : term

0

Line 7: rel_expression : simple_expression

0

Line 7: logic_expression : rel_expression

0

Line 7: expression : logic_expression

0

Line 7: statement : RETURN expression SEMICOLON

return 0;

Line 7: statements : statements statement

int x,y,z;
x=y++;
return 0;

Line 8: compound_statement : LCURL statements RCURL

{
int x,y,z;
x=y++;
return 0;
}

ScopeTable# 1.1
1 --> < x : ID >
2 --> < y : ID >
3 --> < z : ID >

ScopeTable# 1
0 --> < b : ID >
1 --> < x : ID >
2 --> < y : ID >
3 --> < z : ID >
6 --> < a : ID >

Line 8: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int x,y,z;
x=y++;
return 0;
}

Line 8: unit : func_definition

int main(){
int x,y,z;
x=y++;
return 0;
}

Line 8: program : program unit

int x,y,z;
float a,b[100];
int main(){
int x,y,z;
x=y++;
return 0;
}

Line 8: start : program



ScopeTable# 1
0 --> < b : ID >
1 --> < x : ID >
2 --> < y : ID >
3 --> < z : ID >
5 --> < main : ID >
6 --> < a : ID >

Total lines: 8
Total errors: 0